---
import { siteContent } from '../content/site'
// Get current page path to determine if we're on a policy page
const currentPath = Astro.url.pathname
const isHomePage = currentPath === '/'
const baseUrl = isHomePage ? '' : '/'
---

<header class='header'>
  <nav class='nav'>
    <div class='container'>
      <div class='nav-content'>
        <div class='logo'>
          <a href='/' class='logo-link'>
            <img
              src='../assets/images/logo.png'
              astro:src='../assets/images/logo.png'
              alt='Logo'
              style='width: 200px; height: 50px;'
            />
            <span class='logo-text'>{siteContent.company.name}</span>
          </a>
        </div>

        <div class='nav-links' id='nav-links'>
          <a href={`${baseUrl}#services`} class='nav-link'>Services</a>
          <a href={`${baseUrl}#about`} class='nav-link'>About</a>
          <a href={`${baseUrl}#case-studies`} class='nav-link'>Case Studies</a>
          <a href={`${baseUrl}#contact`} class='nav-link'>Contact</a>
          <a href={`${baseUrl}#contact`} class='btn btn-primary'>Get Started</a>
        </div>

        <button
          class='mobile-menu-btn'
          id='mobile-menu-btn'
          aria-label='Toggle menu'
        >
          <span></span>
          <span></span>
          <span></span>
        </button>
      </div>
    </div>
  </nav>
</header>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--color-gray-200);
    transition: all 0.3s ease;
    height: 80px;
  }

  .nav-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--spacing-sm) 0;
    height: 80px;
  }

  .logo-link {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    text-decoration: none;
    color: var(--color-gray-900);
    font-weight: 600;
    font-size: 1.25rem;
  }

  .logo-icon {
    font-size: 1.5rem;
  }

  .nav-links {
    display: flex;
    align-items: center;
    gap: var(--spacing-lg);
  }

  .nav-link {
    text-decoration: none;
    color: var(--color-gray-600);
    font-weight: 500;
    transition: color 0.2s ease;
    position: relative;
  }

  .nav-link:hover {
    color: var(--color-primary);
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--color-primary);
    transition: width 0.3s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .mobile-menu-btn {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-xs);
    z-index: 1001;
  }

  .mobile-menu-btn span {
    width: 24px;
    height: 2px;
    background: var(--color-gray-800);
    transition: all 0.3s ease;
    transform-origin: center;
  }

  .mobile-menu-btn.active span:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }

  .mobile-menu-btn.active span:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-btn.active span:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }

  @media (max-width: 768px) {
    .nav-links {
      position: fixed;
      top: 80px;
      left: 0;
      right: 0;
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(10px);
      flex-direction: column;
      padding: var(--spacing-lg);
      gap: var(--spacing-md);
      border-bottom: 1px solid var(--color-gray-200);
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .nav-links.active {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    .mobile-menu-btn {
      display: flex;
    }

    .nav-link {
      padding: var(--spacing-xs) 0;
      width: 100%;
      text-align: center;
    }

    .btn {
      width: 100%;
      max-width: 200px;
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn')
  const navLinks = document.getElementById('nav-links')

  mobileMenuBtn?.addEventListener('click', () => {
    mobileMenuBtn.classList.toggle('active')
    navLinks?.classList.toggle('active')
  })

  // Close mobile menu when clicking on a link
  document.querySelectorAll('.nav-link').forEach((link) => {
    link.addEventListener('click', () => {
      mobileMenuBtn?.classList.remove('active')
      navLinks?.classList.remove('active')
    })
  })

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (
      !mobileMenuBtn?.contains(e.target as Node) &&
      !navLinks?.contains(e.target as Node)
    ) {
      mobileMenuBtn?.classList.remove('active')
      navLinks?.classList.remove('active')
    }
  })

  // Add scroll effect to header
  window.addEventListener('scroll', () => {
    const header = document.querySelector('.header')
    if (window.scrollY > 100) {
      header?.classList.add('scrolled')
    } else {
      header?.classList.remove('scrolled')
    }
  })

  // Enhanced navigation handling for both same-page and cross-page navigation
  document.querySelectorAll('a[href*="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (e) {
      const href = this.getAttribute('href')
      if (!href) return

      // Check if it's a same-page anchor link
      if (href.startsWith('#')) {
        e.preventDefault()
        const target = document.querySelector(href)
        if (target) {
          const headerHeight = 80
          const targetPosition = target.offsetTop - headerHeight

          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          })
        }
      }
      // For cross-page navigation (like /#services from policy pages), let the browser handle it naturally
      // The browser will navigate to the page and then scroll to the anchor
    })
  })
</script>
